State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Decl
    2        | Decl Program

    3 Decl: VariableDecl
    4     | FunctionDecl
    5     | ClassDecl
    6     | InterfaceDecl

    7 VariableDecl: Variable _semicolon

    8 Variable: Type _id

    9 Type: _int Type2
   10     | _double Type2
   11     | _boolean Type2
   12     | _string Type2
   13     | _id Type2
   14     | _int
   15     | _double
   16     | _boolean
   17     | _string
   18     | _id

   19 Type2: _leftbracket _rightbracket
   20      | _leftbracket _rightbracket Type2

   21 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock
   22             | _void _id _leftparen Formals _rightparen StmtBlock
   23             | Type _id _leftparen _rightparen StmtBlock
   24             | _void _id _leftparen _rightparen StmtBlock

   25 Formals: Variables

   26 Variables: Variable _comma Variables
   27          | Variable

   28 ClassDecl: _class _id Fields0
   29          | _class _id _extends _id Fields0
   30          | _class _id _implements Ids Fields0
   31          | _class _id _extends _id _implements Ids Fields0

   32 Ids: _id
   33    | _id _comma Ids

   34 Fields0: _leftbrace _rightbrace
   35        | _leftbrace Fields _rightbrace

   36 Fields: Field
   37       | Field Fields

   38 Field: VariableDecl
   39      | FunctionDecl

   40 InterfaceDecl: _interface _id _leftbrace Prototypes _rightbrace
   41              | _interface _id _leftbrace _rightbrace

   42 Prototypes: Prototype
   43           | Prototype Prototypes

   44 Prototype: Type _id _leftparen Formals _rightparen _semicolon
   45          | _void _id _leftparen Formals _rightparen _semicolon

   46 StmtBlock: _leftbrace VariableDecls _rightbrace
   47          | _leftbrace Stmts _rightbrace
   48          | _leftbrace VariableDecls Stmts _rightbrace

   49 VariableDecls: VariableDecl
   50              | VariableDecl VariableDecls

   51 Stmts: Stmt
   52      | Stmts Stmt

   53 Stmt: _semicolon
   54     | Expr _semicolon
   55     | IfStmt
   56     | WhileStmt
   57     | ForStmt
   58     | BreakStmt
   59     | ReturnStmt
   60     | PrintStmt
   61     | StmtBlock

   62 IfStmt: _if _leftparen Expr _rightparen Stmt
   63       | _if _leftparen Expr _rightparen Stmt _else Stmt

   64 WhileStmt: _while _leftparen Expr _rightparen Stmt

   65 ForStmt: _for _leftparen _semicolon Expr _semicolon _rightparen Stmt
   66        | _for _leftparen Expr _semicolon Expr _semicolon _rightparen Stmt
   67        | _for _leftparen _semicolon Expr _semicolon Expr _rightparen Stmt
   68        | _for _leftparen Expr _semicolon Expr _semicolon Expr _rightparen Stmt

   69 BreakStmt: _break _semicolon

   70 ReturnStmt: _return _semicolon
   71           | _return Expr _semicolon

   72 PrintStmt: _println _leftparen Exprs _rightparen _semicolon

   73 Exprs: Expr
   74      | Expr _comma Exprs

   75 Expr: Constant
   76     | Lvalue
   77     | Call
   78     | _readln _leftparen _rightparen
   79     | _newarray _leftparen _intconstant _comma Type _rightparen
   80     | Lvalue _assignop Expr
   81     | Expr _or Expr
   82     | Expr _and Expr
   83     | Expr _equal Expr
   84     | Expr _notequal Expr
   85     | Expr _less Expr
   86     | Expr _lessequal Expr
   87     | Expr _greater Expr
   88     | Expr _greaterequal Expr
   89     | Expr _plus Expr
   90     | Expr _minus Expr
   91     | Expr _multiplication Expr
   92     | Expr _division Expr
   93     | Expr _mod Expr
   94     | _not Expr
   95     | _minus Expr
   96     | _leftparen Expr _rightparen

   97 Lvalue: _id
   98       | _id Lvalue2

   99 Lvalue2: _leftbracket Expr _rightbracket
  100        | _period _id
  101        | _leftbracket Expr _rightbracket Lvalue2
  102        | _period _id Lvalue2

  103 Call: _id _leftparen Exprs _rightparen
  104     | _id _period _id _leftparen Exprs _rightparen
  105     | _id _leftparen _rightparen
  106     | _id _period _id _leftparen _rightparen

  107 Constant: _intconstant
  108         | _doubleconstant
  109         | _booleanconstant
  110         | _stringconstant


Terminals, with rules where they appear

$end (0) 0
error (256)
_boolean (258) 11 16
_break (259) 69
_class (260) 28 29 30 31
_double (261) 10 15
_else (262) 63
_extends (263) 29 31
_for (264) 65 66 67 68
_if (265) 62 63
_implements (266) 30 31
_interface (267) 40 41
_int (268) 9 14
_newarray (269) 79
_println (270) 72
_readln (271) 78
_return (272) 70 71
_string (273) 12 17
_void (274) 22 24 45
_while (275) 64
_plus (276) 89
_minus (277) 90 95
_multiplication (278) 91
_division (279) 92
_mod (280) 93
_less (281) 85
_lessequal (282) 86
_greater (283) 87
_greaterequal (284) 88
_equal (285) 83
_notequal (286) 84
_and (287) 82
_or (288) 81
_not (289) 94
_assignop (290) 80
_semicolon (291) 7 44 45 53 54 65 66 67 68 69 70 71 72
_comma (292) 26 33 74 79
_period (293) 100 102 104 106
_leftparen (294) 21 22 23 24 44 45 62 63 64 65 66 67 68 72 78 79 96
    103 104 105 106
_rightparen (295) 21 22 23 24 44 45 62 63 64 65 66 67 68 72 78 79 96
    103 104 105 106
_leftbracket (296) 19 20 99 101
_rightbracket (297) 19 20 99 101
_leftbrace (298) 34 35 40 41 46 47 48
_rightbrace (299) 34 35 40 41 46 47 48
_intconstant (300) 79 107
_doubleconstant (301) 108
_stringconstant (302) 110
_booleanconstant (303) 109
_id (304) 8 13 18 21 22 23 24 28 29 30 31 32 33 40 41 44 45 97 98 100
    102 103 104 105 106
THEN (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Program (52)
    on left: 1 2, on right: 0 2
Decl (53)
    on left: 3 4 5 6, on right: 1 2
VariableDecl (54)
    on left: 7, on right: 3 38 49 50
Variable (55)
    on left: 8, on right: 7 26 27
Type (56)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 8 21 23 44 79
Type2 (57)
    on left: 19 20, on right: 9 10 11 12 13 20
FunctionDecl (58)
    on left: 21 22 23 24, on right: 4 39
Formals (59)
    on left: 25, on right: 21 22 44 45
Variables (60)
    on left: 26 27, on right: 25 26
ClassDecl (61)
    on left: 28 29 30 31, on right: 5
Ids (62)
    on left: 32 33, on right: 30 31 33
Fields0 (63)
    on left: 34 35, on right: 28 29 30 31
Fields (64)
    on left: 36 37, on right: 35 37
Field (65)
    on left: 38 39, on right: 36 37
InterfaceDecl (66)
    on left: 40 41, on right: 6
Prototypes (67)
    on left: 42 43, on right: 40 43
Prototype (68)
    on left: 44 45, on right: 42 43
StmtBlock (69)
    on left: 46 47 48, on right: 21 22 23 24 61
VariableDecls (70)
    on left: 49 50, on right: 46 48 50
Stmts (71)
    on left: 51 52, on right: 47 48 52
Stmt (72)
    on left: 53 54 55 56 57 58 59 60 61, on right: 51 52 62 63 64 65
    66 67 68
IfStmt (73)
    on left: 62 63, on right: 55
WhileStmt (74)
    on left: 64, on right: 56
ForStmt (75)
    on left: 65 66 67 68, on right: 57
BreakStmt (76)
    on left: 69, on right: 58
ReturnStmt (77)
    on left: 70 71, on right: 59
PrintStmt (78)
    on left: 72, on right: 60
Exprs (79)
    on left: 73 74, on right: 72 74 103 104
Expr (80)
    on left: 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
    93 94 95 96, on right: 54 62 63 64 65 66 67 68 71 73 74 80 81 82
    83 84 85 86 87 88 89 90 91 92 93 94 95 96 99 101
Lvalue (81)
    on left: 97 98, on right: 76 80
Lvalue2 (82)
    on left: 99 100 101 102, on right: 98 101 102
Call (83)
    on left: 103 104 105 106, on right: 77
Constant (84)
    on left: 107 108 109 110, on right: 75


State 0

    0 $accept: . Program $end

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _interface  shift, and go to state 4
    _int        shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    Program        go to state 9
    Decl           go to state 10
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    FunctionDecl   go to state 14
    ClassDecl      go to state 15
    InterfaceDecl  go to state 16


State 1

   11 Type: _boolean . Type2
   16     | _boolean .

    _leftbracket  shift, and go to state 17

    $default  reduce using rule 16 (Type)

    Type2  go to state 18


State 2

   28 ClassDecl: _class . _id Fields0
   29          | _class . _id _extends _id Fields0
   30          | _class . _id _implements Ids Fields0
   31          | _class . _id _extends _id _implements Ids Fields0

    _id  shift, and go to state 19


State 3

   10 Type: _double . Type2
   15     | _double .

    _leftbracket  shift, and go to state 17

    $default  reduce using rule 15 (Type)

    Type2  go to state 20


State 4

   40 InterfaceDecl: _interface . _id _leftbrace Prototypes _rightbrace
   41              | _interface . _id _leftbrace _rightbrace

    _id  shift, and go to state 21


State 5

    9 Type: _int . Type2
   14     | _int .

    _leftbracket  shift, and go to state 17

    $default  reduce using rule 14 (Type)

    Type2  go to state 22


State 6

   12 Type: _string . Type2
   17     | _string .

    _leftbracket  shift, and go to state 17

    $default  reduce using rule 17 (Type)

    Type2  go to state 23


State 7

   22 FunctionDecl: _void . _id _leftparen Formals _rightparen StmtBlock
   24             | _void . _id _leftparen _rightparen StmtBlock

    _id  shift, and go to state 24


State 8

   13 Type: _id . Type2
   18     | _id .

    _leftbracket  shift, and go to state 17

    $default  reduce using rule 18 (Type)

    Type2  go to state 25


State 9

    0 $accept: Program . $end

    $end  shift, and go to state 26


State 10

    1 Program: Decl .
    2        | Decl . Program

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _interface  shift, and go to state 4
    _int        shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    $default  reduce using rule 1 (Program)

    Program        go to state 27
    Decl           go to state 10
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    FunctionDecl   go to state 14
    ClassDecl      go to state 15
    InterfaceDecl  go to state 16


State 11

    3 Decl: VariableDecl .

    $default  reduce using rule 3 (Decl)


State 12

    7 VariableDecl: Variable . _semicolon

    _semicolon  shift, and go to state 28


State 13

    8 Variable: Type . _id
   21 FunctionDecl: Type . _id _leftparen Formals _rightparen StmtBlock
   23             | Type . _id _leftparen _rightparen StmtBlock

    _id  shift, and go to state 29


State 14

    4 Decl: FunctionDecl .

    $default  reduce using rule 4 (Decl)


State 15

    5 Decl: ClassDecl .

    $default  reduce using rule 5 (Decl)


State 16

    6 Decl: InterfaceDecl .

    $default  reduce using rule 6 (Decl)


State 17

   19 Type2: _leftbracket . _rightbracket
   20      | _leftbracket . _rightbracket Type2

    _rightbracket  shift, and go to state 30


State 18

   11 Type: _boolean Type2 .

    $default  reduce using rule 11 (Type)


State 19

   28 ClassDecl: _class _id . Fields0
   29          | _class _id . _extends _id Fields0
   30          | _class _id . _implements Ids Fields0
   31          | _class _id . _extends _id _implements Ids Fields0

    _extends     shift, and go to state 31
    _implements  shift, and go to state 32
    _leftbrace   shift, and go to state 33

    Fields0  go to state 34


State 20

   10 Type: _double Type2 .

    $default  reduce using rule 10 (Type)


State 21

   40 InterfaceDecl: _interface _id . _leftbrace Prototypes _rightbrace
   41              | _interface _id . _leftbrace _rightbrace

    _leftbrace  shift, and go to state 35


State 22

    9 Type: _int Type2 .

    $default  reduce using rule 9 (Type)


State 23

   12 Type: _string Type2 .

    $default  reduce using rule 12 (Type)


State 24

   22 FunctionDecl: _void _id . _leftparen Formals _rightparen StmtBlock
   24             | _void _id . _leftparen _rightparen StmtBlock

    _leftparen  shift, and go to state 36


State 25

   13 Type: _id Type2 .

    $default  reduce using rule 13 (Type)


State 26

    0 $accept: Program $end .

    $default  accept


State 27

    2 Program: Decl Program .

    $default  reduce using rule 2 (Program)


State 28

    7 VariableDecl: Variable _semicolon .

    $default  reduce using rule 7 (VariableDecl)


State 29

    8 Variable: Type _id .
   21 FunctionDecl: Type _id . _leftparen Formals _rightparen StmtBlock
   23             | Type _id . _leftparen _rightparen StmtBlock

    _leftparen  shift, and go to state 37

    $default  reduce using rule 8 (Variable)


State 30

   19 Type2: _leftbracket _rightbracket .
   20      | _leftbracket _rightbracket . Type2

    _leftbracket  shift, and go to state 17

    $default  reduce using rule 19 (Type2)

    Type2  go to state 38


State 31

   29 ClassDecl: _class _id _extends . _id Fields0
   31          | _class _id _extends . _id _implements Ids Fields0

    _id  shift, and go to state 39


State 32

   30 ClassDecl: _class _id _implements . Ids Fields0

    _id  shift, and go to state 40

    Ids  go to state 41


State 33

   34 Fields0: _leftbrace . _rightbrace
   35        | _leftbrace . Fields _rightbrace

    _boolean     shift, and go to state 1
    _double      shift, and go to state 3
    _int         shift, and go to state 5
    _string      shift, and go to state 6
    _void        shift, and go to state 7
    _rightbrace  shift, and go to state 42
    _id          shift, and go to state 8

    VariableDecl  go to state 43
    Variable      go to state 12
    Type          go to state 13
    FunctionDecl  go to state 44
    Fields        go to state 45
    Field         go to state 46


State 34

   28 ClassDecl: _class _id Fields0 .

    $default  reduce using rule 28 (ClassDecl)


State 35

   40 InterfaceDecl: _interface _id _leftbrace . Prototypes _rightbrace
   41              | _interface _id _leftbrace . _rightbrace

    _boolean     shift, and go to state 1
    _double      shift, and go to state 3
    _int         shift, and go to state 5
    _string      shift, and go to state 6
    _void        shift, and go to state 47
    _rightbrace  shift, and go to state 48
    _id          shift, and go to state 8

    Type        go to state 49
    Prototypes  go to state 50
    Prototype   go to state 51


State 36

   22 FunctionDecl: _void _id _leftparen . Formals _rightparen StmtBlock
   24             | _void _id _leftparen . _rightparen StmtBlock

    _boolean     shift, and go to state 1
    _double      shift, and go to state 3
    _int         shift, and go to state 5
    _string      shift, and go to state 6
    _rightparen  shift, and go to state 52
    _id          shift, and go to state 8

    Variable   go to state 53
    Type       go to state 54
    Formals    go to state 55
    Variables  go to state 56


State 37

   21 FunctionDecl: Type _id _leftparen . Formals _rightparen StmtBlock
   23             | Type _id _leftparen . _rightparen StmtBlock

    _boolean     shift, and go to state 1
    _double      shift, and go to state 3
    _int         shift, and go to state 5
    _string      shift, and go to state 6
    _rightparen  shift, and go to state 57
    _id          shift, and go to state 8

    Variable   go to state 53
    Type       go to state 54
    Formals    go to state 58
    Variables  go to state 56


State 38

   20 Type2: _leftbracket _rightbracket Type2 .

    $default  reduce using rule 20 (Type2)


State 39

   29 ClassDecl: _class _id _extends _id . Fields0
   31          | _class _id _extends _id . _implements Ids Fields0

    _implements  shift, and go to state 59
    _leftbrace   shift, and go to state 33

    Fields0  go to state 60


State 40

   32 Ids: _id .
   33    | _id . _comma Ids

    _comma  shift, and go to state 61

    $default  reduce using rule 32 (Ids)


State 41

   30 ClassDecl: _class _id _implements Ids . Fields0

    _leftbrace  shift, and go to state 33

    Fields0  go to state 62


State 42

   34 Fields0: _leftbrace _rightbrace .

    $default  reduce using rule 34 (Fields0)


State 43

   38 Field: VariableDecl .

    $default  reduce using rule 38 (Field)


State 44

   39 Field: FunctionDecl .

    $default  reduce using rule 39 (Field)


State 45

   35 Fields0: _leftbrace Fields . _rightbrace

    _rightbrace  shift, and go to state 63


State 46

   36 Fields: Field .
   37       | Field . Fields

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 5
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    $default  reduce using rule 36 (Fields)

    VariableDecl  go to state 43
    Variable      go to state 12
    Type          go to state 13
    FunctionDecl  go to state 44
    Fields        go to state 64
    Field         go to state 46


State 47

   45 Prototype: _void . _id _leftparen Formals _rightparen _semicolon

    _id  shift, and go to state 65


State 48

   41 InterfaceDecl: _interface _id _leftbrace _rightbrace .

    $default  reduce using rule 41 (InterfaceDecl)


State 49

   44 Prototype: Type . _id _leftparen Formals _rightparen _semicolon

    _id  shift, and go to state 66


State 50

   40 InterfaceDecl: _interface _id _leftbrace Prototypes . _rightbrace

    _rightbrace  shift, and go to state 67


State 51

   42 Prototypes: Prototype .
   43           | Prototype . Prototypes

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 5
    _string   shift, and go to state 6
    _void     shift, and go to state 47
    _id       shift, and go to state 8

    $default  reduce using rule 42 (Prototypes)

    Type        go to state 49
    Prototypes  go to state 68
    Prototype   go to state 51


State 52

   24 FunctionDecl: _void _id _leftparen _rightparen . StmtBlock

    _leftbrace  shift, and go to state 69

    StmtBlock  go to state 70


State 53

   26 Variables: Variable . _comma Variables
   27          | Variable .

    _comma  shift, and go to state 71

    $default  reduce using rule 27 (Variables)


State 54

    8 Variable: Type . _id

    _id  shift, and go to state 72


State 55

   22 FunctionDecl: _void _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 73


State 56

   25 Formals: Variables .

    $default  reduce using rule 25 (Formals)


State 57

   23 FunctionDecl: Type _id _leftparen _rightparen . StmtBlock

    _leftbrace  shift, and go to state 69

    StmtBlock  go to state 74


State 58

   21 FunctionDecl: Type _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 75


State 59

   31 ClassDecl: _class _id _extends _id _implements . Ids Fields0

    _id  shift, and go to state 40

    Ids  go to state 76


State 60

   29 ClassDecl: _class _id _extends _id Fields0 .

    $default  reduce using rule 29 (ClassDecl)


State 61

   33 Ids: _id _comma . Ids

    _id  shift, and go to state 40

    Ids  go to state 77


State 62

   30 ClassDecl: _class _id _implements Ids Fields0 .

    $default  reduce using rule 30 (ClassDecl)


State 63

   35 Fields0: _leftbrace Fields _rightbrace .

    $default  reduce using rule 35 (Fields0)


State 64

   37 Fields: Field Fields .

    $default  reduce using rule 37 (Fields)


State 65

   45 Prototype: _void _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 78


State 66

   44 Prototype: Type _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 79


State 67

   40 InterfaceDecl: _interface _id _leftbrace Prototypes _rightbrace .

    $default  reduce using rule 40 (InterfaceDecl)


State 68

   43 Prototypes: Prototype Prototypes .

    $default  reduce using rule 43 (Prototypes)


State 69

   46 StmtBlock: _leftbrace . VariableDecls _rightbrace
   47          | _leftbrace . Stmts _rightbrace
   48          | _leftbrace . VariableDecls Stmts _rightbrace

    _boolean          shift, and go to state 1
    _break            shift, and go to state 80
    _double           shift, and go to state 3
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _int              shift, and go to state 5
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _string           shift, and go to state 6
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 96

    VariableDecl   go to state 97
    Variable       go to state 12
    Type           go to state 54
    StmtBlock      go to state 98
    VariableDecls  go to state 99
    Stmts          go to state 100
    Stmt           go to state 101
    IfStmt         go to state 102
    WhileStmt      go to state 103
    ForStmt        go to state 104
    BreakStmt      go to state 105
    ReturnStmt     go to state 106
    PrintStmt      go to state 107
    Expr           go to state 108
    Lvalue         go to state 109
    Call           go to state 110
    Constant       go to state 111


State 70

   24 FunctionDecl: _void _id _leftparen _rightparen StmtBlock .

    $default  reduce using rule 24 (FunctionDecl)


State 71

   26 Variables: Variable _comma . Variables

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 5
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    Variable   go to state 53
    Type       go to state 54
    Variables  go to state 112


State 72

    8 Variable: Type _id .

    $default  reduce using rule 8 (Variable)


State 73

   22 FunctionDecl: _void _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 69

    StmtBlock  go to state 113


State 74

   23 FunctionDecl: Type _id _leftparen _rightparen StmtBlock .

    $default  reduce using rule 23 (FunctionDecl)


State 75

   21 FunctionDecl: Type _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 69

    StmtBlock  go to state 114


State 76

   31 ClassDecl: _class _id _extends _id _implements Ids . Fields0

    _leftbrace  shift, and go to state 33

    Fields0  go to state 115


State 77

   33 Ids: _id _comma Ids .

    $default  reduce using rule 33 (Ids)


State 78

   45 Prototype: _void _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 5
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    Variable   go to state 53
    Type       go to state 54
    Formals    go to state 116
    Variables  go to state 56


State 79

   44 Prototype: Type _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 5
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    Variable   go to state 53
    Type       go to state 54
    Formals    go to state 117
    Variables  go to state 56


State 80

   69 BreakStmt: _break . _semicolon

    _semicolon  shift, and go to state 118


State 81

   65 ForStmt: _for . _leftparen _semicolon Expr _semicolon _rightparen Stmt
   66        | _for . _leftparen Expr _semicolon Expr _semicolon _rightparen Stmt
   67        | _for . _leftparen _semicolon Expr _semicolon Expr _rightparen Stmt
   68        | _for . _leftparen Expr _semicolon Expr _semicolon Expr _rightparen Stmt

    _leftparen  shift, and go to state 119


State 82

   62 IfStmt: _if . _leftparen Expr _rightparen Stmt
   63       | _if . _leftparen Expr _rightparen Stmt _else Stmt

    _leftparen  shift, and go to state 120


State 83

   79 Expr: _newarray . _leftparen _intconstant _comma Type _rightparen

    _leftparen  shift, and go to state 121


State 84

   72 PrintStmt: _println . _leftparen Exprs _rightparen _semicolon

    _leftparen  shift, and go to state 122


State 85

   78 Expr: _readln . _leftparen _rightparen

    _leftparen  shift, and go to state 123


State 86

   70 ReturnStmt: _return . _semicolon
   71           | _return . Expr _semicolon

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 124
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 126
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 87

   64 WhileStmt: _while . _leftparen Expr _rightparen Stmt

    _leftparen  shift, and go to state 127


State 88

   95 Expr: _minus . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 128
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 89

   94 Expr: _not . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 129
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 90

   53 Stmt: _semicolon .

    $default  reduce using rule 53 (Stmt)


State 91

   96 Expr: _leftparen . Expr _rightparen

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 130
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 92

  107 Constant: _intconstant .

    $default  reduce using rule 107 (Constant)


State 93

  108 Constant: _doubleconstant .

    $default  reduce using rule 108 (Constant)


State 94

  110 Constant: _stringconstant .

    $default  reduce using rule 110 (Constant)


State 95

  109 Constant: _booleanconstant .

    $default  reduce using rule 109 (Constant)


State 96

   13 Type: _id . Type2
   18     | _id .
   97 Lvalue: _id .
   98       | _id . Lvalue2
  103 Call: _id . _leftparen Exprs _rightparen
  104     | _id . _period _id _leftparen Exprs _rightparen
  105     | _id . _leftparen _rightparen
  106     | _id . _period _id _leftparen _rightparen

    _period       shift, and go to state 131
    _leftparen    shift, and go to state 132
    _leftbracket  shift, and go to state 133

    _id       reduce using rule 18 (Type)
    $default  reduce using rule 97 (Lvalue)

    Type2    go to state 25
    Lvalue2  go to state 134


State 97

   49 VariableDecls: VariableDecl .
   50              | VariableDecl . VariableDecls

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 5
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    _id       [reduce using rule 49 (VariableDecls)]
    $default  reduce using rule 49 (VariableDecls)

    VariableDecl   go to state 97
    Variable       go to state 12
    Type           go to state 54
    VariableDecls  go to state 135


State 98

   61 Stmt: StmtBlock .

    $default  reduce using rule 61 (Stmt)


State 99

   46 StmtBlock: _leftbrace VariableDecls . _rightbrace
   48          | _leftbrace VariableDecls . Stmts _rightbrace

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _rightbrace       shift, and go to state 136
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmts       go to state 137
    Stmt        go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 100

   47 StmtBlock: _leftbrace Stmts . _rightbrace
   52 Stmts: Stmts . Stmt

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _rightbrace       shift, and go to state 138
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmt        go to state 139
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 101

   51 Stmts: Stmt .

    $default  reduce using rule 51 (Stmts)


State 102

   55 Stmt: IfStmt .

    $default  reduce using rule 55 (Stmt)


State 103

   56 Stmt: WhileStmt .

    $default  reduce using rule 56 (Stmt)


State 104

   57 Stmt: ForStmt .

    $default  reduce using rule 57 (Stmt)


State 105

   58 Stmt: BreakStmt .

    $default  reduce using rule 58 (Stmt)


State 106

   59 Stmt: ReturnStmt .

    $default  reduce using rule 59 (Stmt)


State 107

   60 Stmt: PrintStmt .

    $default  reduce using rule 60 (Stmt)


State 108

   54 Stmt: Expr . _semicolon
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _semicolon       shift, and go to state 153


State 109

   76 Expr: Lvalue .
   80     | Lvalue . _assignop Expr

    _assignop  shift, and go to state 154

    $default  reduce using rule 76 (Expr)


State 110

   77 Expr: Call .

    $default  reduce using rule 77 (Expr)


State 111

   75 Expr: Constant .

    $default  reduce using rule 75 (Expr)


State 112

   26 Variables: Variable _comma Variables .

    $default  reduce using rule 26 (Variables)


State 113

   22 FunctionDecl: _void _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 22 (FunctionDecl)


State 114

   21 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 21 (FunctionDecl)


State 115

   31 ClassDecl: _class _id _extends _id _implements Ids Fields0 .

    $default  reduce using rule 31 (ClassDecl)


State 116

   45 Prototype: _void _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 155


State 117

   44 Prototype: Type _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 156


State 118

   69 BreakStmt: _break _semicolon .

    $default  reduce using rule 69 (BreakStmt)


State 119

   65 ForStmt: _for _leftparen . _semicolon Expr _semicolon _rightparen Stmt
   66        | _for _leftparen . Expr _semicolon Expr _semicolon _rightparen Stmt
   67        | _for _leftparen . _semicolon Expr _semicolon Expr _rightparen Stmt
   68        | _for _leftparen . Expr _semicolon Expr _semicolon Expr _rightparen Stmt

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 157
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 158
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 120

   62 IfStmt: _if _leftparen . Expr _rightparen Stmt
   63       | _if _leftparen . Expr _rightparen Stmt _else Stmt

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 159
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 121

   79 Expr: _newarray _leftparen . _intconstant _comma Type _rightparen

    _intconstant  shift, and go to state 160


State 122

   72 PrintStmt: _println _leftparen . Exprs _rightparen _semicolon

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Exprs     go to state 161
    Expr      go to state 162
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 123

   78 Expr: _readln _leftparen . _rightparen

    _rightparen  shift, and go to state 163


State 124

   70 ReturnStmt: _return _semicolon .

    $default  reduce using rule 70 (ReturnStmt)


State 125

   97 Lvalue: _id .
   98       | _id . Lvalue2
  103 Call: _id . _leftparen Exprs _rightparen
  104     | _id . _period _id _leftparen Exprs _rightparen
  105     | _id . _leftparen _rightparen
  106     | _id . _period _id _leftparen _rightparen

    _period       shift, and go to state 131
    _leftparen    shift, and go to state 132
    _leftbracket  shift, and go to state 164

    $default  reduce using rule 97 (Lvalue)

    Lvalue2  go to state 134


State 126

   71 ReturnStmt: _return Expr . _semicolon
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _semicolon       shift, and go to state 165


State 127

   64 WhileStmt: _while _leftparen . Expr _rightparen Stmt

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 166
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 128

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr
   95     | _minus Expr .

    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144

    $default  reduce using rule 95 (Expr)


State 129

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr
   94     | _not Expr .

    $default  reduce using rule 94 (Expr)


State 130

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr
   96     | _leftparen Expr . _rightparen

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _rightparen      shift, and go to state 167


State 131

  100 Lvalue2: _period . _id
  102        | _period . _id Lvalue2
  104 Call: _id _period . _id _leftparen Exprs _rightparen
  106     | _id _period . _id _leftparen _rightparen

    _id  shift, and go to state 168


State 132

  103 Call: _id _leftparen . Exprs _rightparen
  105     | _id _leftparen . _rightparen

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _rightparen       shift, and go to state 169
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Exprs     go to state 170
    Expr      go to state 162
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 133

   19 Type2: _leftbracket . _rightbracket
   20      | _leftbracket . _rightbracket Type2
   99 Lvalue2: _leftbracket . Expr _rightbracket
  101        | _leftbracket . Expr _rightbracket Lvalue2

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _rightbracket     shift, and go to state 30
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 171
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 134

   98 Lvalue: _id Lvalue2 .

    $default  reduce using rule 98 (Lvalue)


State 135

   50 VariableDecls: VariableDecl VariableDecls .

    $default  reduce using rule 50 (VariableDecls)


State 136

   46 StmtBlock: _leftbrace VariableDecls _rightbrace .

    $default  reduce using rule 46 (StmtBlock)


State 137

   48 StmtBlock: _leftbrace VariableDecls Stmts . _rightbrace
   52 Stmts: Stmts . Stmt

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _rightbrace       shift, and go to state 172
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmt        go to state 139
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 138

   47 StmtBlock: _leftbrace Stmts _rightbrace .

    $default  reduce using rule 47 (StmtBlock)


State 139

   52 Stmts: Stmts Stmt .

    $default  reduce using rule 52 (Stmts)


State 140

   89 Expr: Expr _plus . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 173
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 141

   90 Expr: Expr _minus . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 174
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 142

   91 Expr: Expr _multiplication . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 175
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 143

   92 Expr: Expr _division . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 176
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 144

   93 Expr: Expr _mod . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 177
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 145

   85 Expr: Expr _less . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 178
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 146

   86 Expr: Expr _lessequal . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 179
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 147

   87 Expr: Expr _greater . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 180
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 148

   88 Expr: Expr _greaterequal . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 181
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 149

   83 Expr: Expr _equal . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 182
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 150

   84 Expr: Expr _notequal . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 183
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 151

   82 Expr: Expr _and . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 184
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 152

   81 Expr: Expr _or . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 185
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 153

   54 Stmt: Expr _semicolon .

    $default  reduce using rule 54 (Stmt)


State 154

   80 Expr: Lvalue _assignop . Expr

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 186
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 155

   45 Prototype: _void _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 187


State 156

   44 Prototype: Type _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 188


State 157

   65 ForStmt: _for _leftparen _semicolon . Expr _semicolon _rightparen Stmt
   67        | _for _leftparen _semicolon . Expr _semicolon Expr _rightparen Stmt

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 189
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 158

   66 ForStmt: _for _leftparen Expr . _semicolon Expr _semicolon _rightparen Stmt
   68        | _for _leftparen Expr . _semicolon Expr _semicolon Expr _rightparen Stmt
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _semicolon       shift, and go to state 190


State 159

   62 IfStmt: _if _leftparen Expr . _rightparen Stmt
   63       | _if _leftparen Expr . _rightparen Stmt _else Stmt
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _rightparen      shift, and go to state 191


State 160

   79 Expr: _newarray _leftparen _intconstant . _comma Type _rightparen

    _comma  shift, and go to state 192


State 161

   72 PrintStmt: _println _leftparen Exprs . _rightparen _semicolon

    _rightparen  shift, and go to state 193


State 162

   73 Exprs: Expr .
   74      | Expr . _comma Exprs
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _comma           shift, and go to state 194

    $default  reduce using rule 73 (Exprs)


State 163

   78 Expr: _readln _leftparen _rightparen .

    $default  reduce using rule 78 (Expr)


State 164

   99 Lvalue2: _leftbracket . Expr _rightbracket
  101        | _leftbracket . Expr _rightbracket Lvalue2

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 171
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 165

   71 ReturnStmt: _return Expr _semicolon .

    $default  reduce using rule 71 (ReturnStmt)


State 166

   64 WhileStmt: _while _leftparen Expr . _rightparen Stmt
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _rightparen      shift, and go to state 195


State 167

   96 Expr: _leftparen Expr _rightparen .

    $default  reduce using rule 96 (Expr)


State 168

  100 Lvalue2: _period _id .
  102        | _period _id . Lvalue2
  104 Call: _id _period _id . _leftparen Exprs _rightparen
  106     | _id _period _id . _leftparen _rightparen

    _period       shift, and go to state 196
    _leftparen    shift, and go to state 197
    _leftbracket  shift, and go to state 164

    $default  reduce using rule 100 (Lvalue2)

    Lvalue2  go to state 198


State 169

  105 Call: _id _leftparen _rightparen .

    $default  reduce using rule 105 (Call)


State 170

  103 Call: _id _leftparen Exprs . _rightparen

    _rightparen  shift, and go to state 199


State 171

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr
   99 Lvalue2: _leftbracket Expr . _rightbracket
  101        | _leftbracket Expr . _rightbracket Lvalue2

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _rightbracket    shift, and go to state 200


State 172

   48 StmtBlock: _leftbrace VariableDecls Stmts _rightbrace .

    $default  reduce using rule 48 (StmtBlock)


State 173

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   89     | Expr _plus Expr .
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144

    $default  reduce using rule 89 (Expr)


State 174

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   90     | Expr _minus Expr .
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144

    $default  reduce using rule 90 (Expr)


State 175

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   91     | Expr _multiplication Expr .
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    $default  reduce using rule 91 (Expr)


State 176

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   92     | Expr _division Expr .
   93     | Expr . _mod Expr

    $default  reduce using rule 92 (Expr)


State 177

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr
   93     | Expr _mod Expr .

    $default  reduce using rule 93 (Expr)


State 178

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   85     | Expr _less Expr .
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144

    $default  reduce using rule 85 (Expr)


State 179

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   86     | Expr _lessequal Expr .
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144

    $default  reduce using rule 86 (Expr)


State 180

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   87     | Expr _greater Expr .
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144

    $default  reduce using rule 87 (Expr)


State 181

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   88     | Expr _greaterequal Expr .
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144

    $default  reduce using rule 88 (Expr)


State 182

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   83     | Expr _equal Expr .
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148

    $default  reduce using rule 83 (Expr)


State 183

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   84     | Expr _notequal Expr .
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148

    $default  reduce using rule 84 (Expr)


State 184

   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   82     | Expr _and Expr .
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150

    $default  reduce using rule 82 (Expr)


State 185

   81 Expr: Expr . _or Expr
   81     | Expr _or Expr .
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151

    $default  reduce using rule 81 (Expr)


State 186

   80 Expr: Lvalue _assignop Expr .
   81     | Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152

    $default  reduce using rule 80 (Expr)


State 187

   45 Prototype: _void _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 45 (Prototype)


State 188

   44 Prototype: Type _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 44 (Prototype)


State 189

   65 ForStmt: _for _leftparen _semicolon Expr . _semicolon _rightparen Stmt
   67        | _for _leftparen _semicolon Expr . _semicolon Expr _rightparen Stmt
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _semicolon       shift, and go to state 201


State 190

   66 ForStmt: _for _leftparen Expr _semicolon . Expr _semicolon _rightparen Stmt
   68        | _for _leftparen Expr _semicolon . Expr _semicolon Expr _rightparen Stmt

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 202
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 191

   62 IfStmt: _if _leftparen Expr _rightparen . Stmt
   63       | _if _leftparen Expr _rightparen . Stmt _else Stmt

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmt        go to state 203
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 192

   79 Expr: _newarray _leftparen _intconstant _comma . Type _rightparen

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 5
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    Type  go to state 204


State 193

   72 PrintStmt: _println _leftparen Exprs _rightparen . _semicolon

    _semicolon  shift, and go to state 205


State 194

   74 Exprs: Expr _comma . Exprs

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Exprs     go to state 206
    Expr      go to state 162
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 195

   64 WhileStmt: _while _leftparen Expr _rightparen . Stmt

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmt        go to state 207
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 196

  100 Lvalue2: _period . _id
  102        | _period . _id Lvalue2

    _id  shift, and go to state 208


State 197

  104 Call: _id _period _id _leftparen . Exprs _rightparen
  106     | _id _period _id _leftparen . _rightparen

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _rightparen       shift, and go to state 209
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Exprs     go to state 210
    Expr      go to state 162
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 198

  102 Lvalue2: _period _id Lvalue2 .

    $default  reduce using rule 102 (Lvalue2)


State 199

  103 Call: _id _leftparen Exprs _rightparen .

    $default  reduce using rule 103 (Call)


State 200

   99 Lvalue2: _leftbracket Expr _rightbracket .
  101        | _leftbracket Expr _rightbracket . Lvalue2

    _period       shift, and go to state 196
    _leftbracket  shift, and go to state 164

    $default  reduce using rule 99 (Lvalue2)

    Lvalue2  go to state 211


State 201

   65 ForStmt: _for _leftparen _semicolon Expr _semicolon . _rightparen Stmt
   67        | _for _leftparen _semicolon Expr _semicolon . Expr _rightparen Stmt

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _rightparen       shift, and go to state 212
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 213
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 202

   66 ForStmt: _for _leftparen Expr _semicolon Expr . _semicolon _rightparen Stmt
   68        | _for _leftparen Expr _semicolon Expr . _semicolon Expr _rightparen Stmt
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _semicolon       shift, and go to state 214


State 203

   62 IfStmt: _if _leftparen Expr _rightparen Stmt .
   63       | _if _leftparen Expr _rightparen Stmt . _else Stmt

    _else  shift, and go to state 215

    $default  reduce using rule 62 (IfStmt)


State 204

   79 Expr: _newarray _leftparen _intconstant _comma Type . _rightparen

    _rightparen  shift, and go to state 216


State 205

   72 PrintStmt: _println _leftparen Exprs _rightparen _semicolon .

    $default  reduce using rule 72 (PrintStmt)


State 206

   74 Exprs: Expr _comma Exprs .

    $default  reduce using rule 74 (Exprs)


State 207

   64 WhileStmt: _while _leftparen Expr _rightparen Stmt .

    $default  reduce using rule 64 (WhileStmt)


State 208

  100 Lvalue2: _period _id .
  102        | _period _id . Lvalue2

    _period       shift, and go to state 196
    _leftbracket  shift, and go to state 164

    $default  reduce using rule 100 (Lvalue2)

    Lvalue2  go to state 198


State 209

  106 Call: _id _period _id _leftparen _rightparen .

    $default  reduce using rule 106 (Call)


State 210

  104 Call: _id _period _id _leftparen Exprs . _rightparen

    _rightparen  shift, and go to state 217


State 211

  101 Lvalue2: _leftbracket Expr _rightbracket Lvalue2 .

    $default  reduce using rule 101 (Lvalue2)


State 212

   65 ForStmt: _for _leftparen _semicolon Expr _semicolon _rightparen . Stmt

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmt        go to state 218
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 213

   67 ForStmt: _for _leftparen _semicolon Expr _semicolon Expr . _rightparen Stmt
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _rightparen      shift, and go to state 219


State 214

   66 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon . _rightparen Stmt
   68        | _for _leftparen Expr _semicolon Expr _semicolon . Expr _rightparen Stmt

    _newarray         shift, and go to state 83
    _readln           shift, and go to state 85
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _leftparen        shift, and go to state 91
    _rightparen       shift, and go to state 220
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    Expr      go to state 221
    Lvalue    go to state 109
    Call      go to state 110
    Constant  go to state 111


State 215

   63 IfStmt: _if _leftparen Expr _rightparen Stmt _else . Stmt

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmt        go to state 222
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 216

   79 Expr: _newarray _leftparen _intconstant _comma Type _rightparen .

    $default  reduce using rule 79 (Expr)


State 217

  104 Call: _id _period _id _leftparen Exprs _rightparen .

    $default  reduce using rule 104 (Call)


State 218

   65 ForStmt: _for _leftparen _semicolon Expr _semicolon _rightparen Stmt .

    $default  reduce using rule 65 (ForStmt)


State 219

   67 ForStmt: _for _leftparen _semicolon Expr _semicolon Expr _rightparen . Stmt

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmt        go to state 223
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 220

   66 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon _rightparen . Stmt

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmt        go to state 224
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 221

   68 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon Expr . _rightparen Stmt
   81 Expr: Expr . _or Expr
   82     | Expr . _and Expr
   83     | Expr . _equal Expr
   84     | Expr . _notequal Expr
   85     | Expr . _less Expr
   86     | Expr . _lessequal Expr
   87     | Expr . _greater Expr
   88     | Expr . _greaterequal Expr
   89     | Expr . _plus Expr
   90     | Expr . _minus Expr
   91     | Expr . _multiplication Expr
   92     | Expr . _division Expr
   93     | Expr . _mod Expr

    _plus            shift, and go to state 140
    _minus           shift, and go to state 141
    _multiplication  shift, and go to state 142
    _division        shift, and go to state 143
    _mod             shift, and go to state 144
    _less            shift, and go to state 145
    _lessequal       shift, and go to state 146
    _greater         shift, and go to state 147
    _greaterequal    shift, and go to state 148
    _equal           shift, and go to state 149
    _notequal        shift, and go to state 150
    _and             shift, and go to state 151
    _or              shift, and go to state 152
    _rightparen      shift, and go to state 225


State 222

   63 IfStmt: _if _leftparen Expr _rightparen Stmt _else Stmt .

    $default  reduce using rule 63 (IfStmt)


State 223

   67 ForStmt: _for _leftparen _semicolon Expr _semicolon Expr _rightparen Stmt .

    $default  reduce using rule 67 (ForStmt)


State 224

   66 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon _rightparen Stmt .

    $default  reduce using rule 66 (ForStmt)


State 225

   68 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon Expr _rightparen . Stmt

    _break            shift, and go to state 80
    _for              shift, and go to state 81
    _if               shift, and go to state 82
    _newarray         shift, and go to state 83
    _println          shift, and go to state 84
    _readln           shift, and go to state 85
    _return           shift, and go to state 86
    _while            shift, and go to state 87
    _minus            shift, and go to state 88
    _not              shift, and go to state 89
    _semicolon        shift, and go to state 90
    _leftparen        shift, and go to state 91
    _leftbrace        shift, and go to state 69
    _intconstant      shift, and go to state 92
    _doubleconstant   shift, and go to state 93
    _stringconstant   shift, and go to state 94
    _booleanconstant  shift, and go to state 95
    _id               shift, and go to state 125

    StmtBlock   go to state 98
    Stmt        go to state 226
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107
    Expr        go to state 108
    Lvalue      go to state 109
    Call        go to state 110
    Constant    go to state 111


State 226

   68 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon Expr _rightparen Stmt .

    $default  reduce using rule 68 (ForStmt)
